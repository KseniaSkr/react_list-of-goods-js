{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortType","setSortType","isReverse","setIsReverse","sortedGoods","sort","a","b","localeCompare","length","reverse","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SAGVC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAJT,OAIzB,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAW,UAAOT,GAmBxB,OAjBIK,GACFI,EAAYC,MAAK,SAACC,EAAGC,GACnB,OAAQP,GACN,KAAKJ,EACH,OAAOU,EAAEE,cAAcD,GACzB,KAAKV,EACH,OAAOS,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAKXP,GACFE,EAAYM,UAIZ,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYjB,IAAqBI,IAEnCc,QAAS,kBAAMb,EAAYL,IAL7B,iCAUA,wBACEgB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYhB,IAAmBG,IAEjCc,QAAS,kBAAMb,EAAYJ,IAL7B,4BAUA,wBACEe,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAaX,IAClDY,QAAS,kBAAMX,GAAcD,IAH/B,sBAQEF,GAAYE,IACZ,wBACEU,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPb,EAAY,IACZE,EA9Da,QAyDjB,sBAaJ,6BACGC,EAAYW,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCzFlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.97762187.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\nconst REVERSE_BASE_STATE = false;\n\nexport const App = () => {\n  const [sortType, setSortType] = useState('');\n  const [isReverse, setIsReverse] = useState(REVERSE_BASE_STATE);\n\n  const sortedGoods = [...goodsFromServer];\n\n  if (sortType) {\n    sortedGoods.sort((a, b) => {\n      switch (sortType) {\n        case SORT_BY_ALPHABET:\n          return a.localeCompare(b);\n        case SORT_BY_LENGTH:\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    sortedGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': SORT_BY_ALPHABET !== sortType,\n          })}\n          onClick={() => setSortType(SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': SORT_BY_LENGTH !== sortType,\n          })}\n          onClick={() => setSortType(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !isReverse })}\n          onClick={() => setIsReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortType('');\n              setIsReverse(REVERSE_BASE_STATE);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}